--!strict
-- This script provides the core logic for an NPC to find a target and aim at its head.
-- You will need to customize it to fit your specific NPC and game.

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local NPC = script.Parent
local NPC_Humanoid = NPC:FindFirstChildOfClass("Humanoid")
local NPC_Head = NPC:FindFirstChild("Head")
local NPC_Torso = NPC:FindFirstChild("Torso")

-- The 'Neck' Motor6D is crucial for head rotation.
local Neck = NPC_Torso:FindFirstChild("Neck")

-- The maximum distance the NPC can "see" a player.
local MAX_RANGE = 50 

-- The part on the NPC that should be doing the aiming (e.g., a weapon, a specific arm part).
-- For this example, we'll just aim with the NPC's torso CFrame.
-- You would replace this with your actual weapon part.
local AIMING_PART = NPC_Torso

-- We'll use this to prevent the raycast from hitting the NPC itself.
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Exclude
raycastParams.FilterDescendantsInstances = {NPC}

-- Main loop to handle targeting and aiming.
RunService.Heartbeat:Connect(function()
	if not NPC_Humanoid or not NPC_Head or not AIMING_PART or not Neck then
		return
	end

	local closestPlayer = nil
	local closestDistance = MAX_RANGE

	-- Find the closest player to the NPC.
	for _, player in ipairs(Players:GetPlayers()) do
		local character = player.Character
		if character and character:FindFirstChildOfClass("Humanoid") and character:FindFirstChild("HumanoidRootPart") then
			local distance = (NPC.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
			if distance < closestDistance then
				closestDistance = distance
				closestPlayer = player
			end
		end
	end

	-- If a player is found, proceed with aiming.
	if closestPlayer then
		local targetCharacter = closestPlayer.Character
		local targetHead = targetCharacter:FindFirstChild("Head")

		if targetHead then
			local npcToTargetVector = targetHead.Position - NPC_Head.Position
			local rayDirection = npcToTargetVector.Unit * closestDistance

			-- Perform a raycast to check for a clear line of sight.
			local raycastResult = Workspace:Raycast(NPC_Head.Position, rayDirection, raycastParams)

			-- Check if the raycast hit the target's head.
			if raycastResult and raycastResult.Instance.Parent == targetCharacter then
				
				-- Line of sight is clear. Now, aim the NPC's head and torso.
				
				-- Aim the NPC's head by adjusting the Neck Motor6D C0.
				-- This gives a realistic head-tracking effect.
				local headAimCFrame = CFrame.lookAt(Neck.C0.Position, targetHead.Position)
				Neck.C0 = Neck.C0:Lerp(headAimCFrame, 0.5) -- Using Lerp for smoother movement
				
				-- Aim the main body part (e.g., torso) at the target's head.
				-- You could also use a different aiming part, like a weapon.
				local torsoAimCFrame = CFrame.lookAt(AIMING_PART.Position, targetHead.Position)
				AIMING_PART.CFrame = torsoAimCFrame

			end
		end
	end
end)
